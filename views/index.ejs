<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Dashboard - Clinic ERP</title>
  <link rel="stylesheet" href="/stylesheet/styles.css?v=2">


  <link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet">
  <!-- Add Chart.js CDN -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <style>
    .material-symbols-outlined {
      font-family: 'Material Symbols Outlined';
      font-weight: normal;
      font-style: normal;
      font-size: 24px;
      display: inline-block;
      vertical-align: middle;
      margin-right: 8px;
    }

    .dashboard {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 20px;
    }

    .card {
      display: flex;
      flex-direction: column;
      background: white;
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
      transition: transform 0.2s;
    }

    .card:hover {
      transform: scale(1.02);
    }

    .card h3 {
      color: #888;
      margin-bottom: 10px;
      font-size: 1rem;
    }

    .card .value {
      font-size: 1.8rem;
      font-weight: bold;
      color: #2f3e46;
    }

    .activity-log {
      margin-top: 40px;
    }

    .activity-log h3 {
      margin-bottom: 15px;
      color: #333;
    }

    .activity-log ul {
      list-style: none;
      padding-left: 0;
    }

    .activity-log li {
      padding: 10px;
      border-bottom: 1px solid #eee;
      font-size: 0.95rem;
    }

    .activity-log li span {
      color: #2f80ed;
      font-weight: bold;
    }
  </style>
</head>
<body>
  <div class="container">
    <aside class="sidebar">
      <h2>ðŸ©º Clinic ERP</h2>
      <nav>
        <a href="/index">Dashboard</a>
        <a href="/patients">Patients</a>
        <a href="/appointments">Appointments</a>
        <a href="/billing">Billing</a>
        <a href="/reports">Reports</a>
        <a href="/doctor" class="active">Doctors</a>
        <a href="/settings">Settings</a>
      </nav>
    </aside>

    <main class="main">
<header class="topbar">
  <h1>Welcome, Admin</h1>
</header>

<!-- Dashboard Cards -->
<section class="dashboard">
  <div class="card">
    <h3><span class="material-symbols-outlined">calendar_today</span>Today's Appointments</h3>
    <div class="value" id="appointmentCount">8</div>
  </div>
  <div class="card">
    <h3><span class="material-symbols-outlined">group</span>New Patients</h3>
    <div class="value" id="newPatients">3</div>
  </div>
  <div class="card">
    <h3><span class="material-symbols-outlined">payments</span>Today's Revenue</h3>
    <div class="value" id="todayRevenue">â‚¹12,000</div>
  </div>
  <div class="card">
    <h3><span class="material-symbols-outlined">person</span>Active Doctors</h3>
    <div class="value">3</div>
  </div>
  <div class="card">
    <h3><span class="material-symbols-outlined">add_circle</span><a href="/add-appointment" style="text-decoration:none;color:inherit;">Add Appointment</a></h3>
    <div class="value">+ Quick Entry</div>
  </div>
</section>

<!-- Date Filter -->
<section class="content" style="margin-top: 30px;">
  <label style="font-weight:bold;">Filter by Date Range:</label><br/><br/>
  <input type="date" id="startDate" /> to 
  <input type="date" id="endDate" />
  <button class="btn" onclick="filterData()">Apply</button>
</section>

<!-- Revenue Chart -->
<section class="content" style="margin-top: 30px;">
  <h3>Monthly Revenue Chart</h3>
  <canvas id="revenueChart" height="100"></canvas>
</section>

<!-- Activity Log -->


    </main>
  </div>

  <script>
  // Dummy monthly revenue data
  const monthlyRevenue = [12000, 15000, 13000, 17000, 14500, 16000];
  const months = ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'];

  // Render chart
  const ctx = document.getElementById('revenueChart').getContext('2d');
  const revenueChart = new Chart(ctx, {
    type: 'bar',
    data: {
      labels: months,
      datasets: [{
        label: 'Revenue (â‚¹)',
        data: monthlyRevenue,
        backgroundColor: '#2f80ed'
      }]
    },
    options: {
      responsive: true,
      plugins: {
        legend: { display: false }
      },
      scales: {
        y: { beginAtZero: true }
      }
    }
  });

  // Simulate live updates (mock example)
  setInterval(() => {
    const rand = Math.floor(Math.random() * 5) + 1;
    document.getElementById('appointmentCount').textContent = 8 + rand;
    document.getElementById('newPatients').textContent = 3 + rand;
    document.getElementById('todayRevenue').textContent = `â‚¹${12000 + rand * 200}`;
  }, 5000);

  // Simulate filter logic
  function filterData() {
    const start = document.getElementById('startDate').value;
    const end = document.getElementById('endDate').value;
    alert(`Filtered data between ${start} and ${end} (simulation only).`);
    // In real app: fetch data from backend with these dates
  }
</script>

</body>
</html>